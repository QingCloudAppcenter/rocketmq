---
- name: Create local cache Directories
  file:
    path: "{{ local_cache_path }}/rocketmq"
    state: directory
    owner: root
    group: root
    mode: "0750"
    recurse: yes
  run_once: True
  delegate_to: localhost

- name: check if package file exists
  stat:
    path: "/tmp/rocketmq-externals-master/rocketmq-console"
  register: cached_file
  run_once: True
  delegate_to: localhost

- name: check if jar file exists
  stat:
    path: "{{ local_cache_path }}/rocketmq/rocketmq-console-{{ console_version }}.jar"
  register: jar_file
  run_once: True
  delegate_to: localhost

- name: download src code from github
  git:
    repo: 'https://github.com/apache/rocketmq-externals.git'
    dest: /tmp/rocketmq-externals-master
    update: no
  run_once: True
  delegate_to: localhost
  when:
  - cached_file.stat.exists == False and jar_file.stat.exists == False

- name: compile jar by container
  docker_container:
    name: console-jar-compiler
    image: "maven:3.6-openjdk-11"
    command: mvn clean package -Dmaven.test.skip=true
    state: started
    recreate: yes
    working_dir: /usr/src/rocketmq-console
    volumes:
      - /tmp/rocketmq-externals-master/rocketmq-console:/usr/src/rocketmq-console
  delegate_to: localhost
  when:
  - cached_file.stat.exists == True and jar_file.stat.exists == False

- name: wait for jar finish compile
  wait_for:
    timeout: 7200
    path: "/tmp/rocketmq-externals-master/rocketmq-console/target/rocketmq-console-ng-{{ console_version }}.jar"
    state: present
  delegate_to: localhost

- name: copy jar to local_cache_path
  copy:
    src: "/tmp/rocketmq-externals-master/rocketmq-console/target/rocketmq-console-ng-{{ console_version }}.jar"
    dest: "{{ local_cache_path }}/rocketmq/rocketmq-console-{{ console_version }}.jar"
    owner: root
    group: root
    mode: preserve
    directory_mode: u=rwx,g=rx,o=
  delegate_to: localhost
  when:
  - jar_file.stat.exists == False

- name: prepare service directories
  file:
    path: "/opt/{{ item }}"
    owner: "{{ user }}"
    group: "{{ user }}"
    state: directory
  with_items:
    - "rocketmq-console/{{ console_version }}"

- name: create symbolic links
  file:
    src: "/opt/{{ item.name }}/{{ item.version }}"
    dest: /opt/{{ item.name }}/current
    owner: "{{ user }}"
    group: "{{ user }}"
    state: link
  with_items:
    - name: rocketmq-console
      version: "{{ console_version }}"

- name: install console jar
  copy:
    src: "{{ local_cache_path }}/rocketmq/rocketmq-console-{{ console_version }}.jar"
    dest: "/opt/rocketmq-console/{{ console_version }}/rocketmq-console.jar"
    owner: "{{ user }}"
    group: "{{ user }}"
    mode: preserve
    directory_mode: u=rwx,g=rwx,o=
